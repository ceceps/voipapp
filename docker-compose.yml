services:
  php_laravel:
    build: 
      context: ./backend
      dockerfile: Dockerfile
      args:
        HOST_USER_GID: ${HOST_USER_GID:-1000}
        HOST_USER_UID: ${HOST_USER_UID:-1000}
        XDEBUG_ENABLED: ${XDEBUG_ENABLED:-true}
        XDEBUG_MODE: develop,coverage,debug,profile
        XDEBUG_HOST: ${XDEBUG_HOST:-host.docker.internal}
        XDEBUG_IDE_KEY: ${XDEBUG_IDE_KEY:-DOCKER}
        XDEBUG_LOG: /dev/stdout
        XDEBUG_LOG_LEVEL: 0
    container_name: php_laravel
    hostname: "php"
    restart: unless-stopped
    volumes:
      - ./backend:/var/www/html
      - ./backend/www.conf:/usr/local/etc/php-fpm.d/www.conf
      - ./backend/local.ini:/usr/local/etc/php/conf.d/local.ini
    working_dir: /var/www/html
    environment:
      - APP_ENV=local
      - APP_DEBUG=true
      - DB_CONNECTION=mysql
      - DB_HOST=mysql_laravel
      - DB_PORT=3306
      - DB_DATABASE=${MYSQL_DATABASE}
      - DB_USERNAME=${MYSQL_USER}
      - DB_PASSWORD=${MYSQL_PASSWORD}
      - SANCTUM_STATEFUL_DOMAINS=${SANCTUM_STATEFUL_DOMAINS}
      - SESSION_DRIVER=cookie 
      - SESSION_DOMAIN=${SESSION_DOMAIN}
    ports:
      - "9000:9000"
    depends_on: 
      - mysql_laravel

    # extra_hosts:
    #   - host.docker.internal:host-gateway
    networks:
      - laravelnetwork

  mysql_laravel:
    build:
      context: ./database
      dockerfile: Dockerfile
    container_name: mysql_laravel
    restart: always
    tty: true
    ports:
      - 3307:3306
    volumes:
      - mysql-logs:/var/log/mysql
      - ./database/data:/var/lib/mysql
      - ./database/setupdb.sql:/docker-entrypoint-initdb.b/01-setupdb.sql

    environment:
      MYSQL_ROOT_HOST: '%'
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_AUTHENTICATION_PLUGIN: mysql_native_password
      TZ: Asia/Jakarta
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    networks:
     - laravelnetwork

  npm:
    build:
      context: .
      dockerfile: ./frontend/Dockerfile
    working_dir: /var/www/app
    container_name: npm_dev
    hostname: "npm"
    restart: unless-stopped
    volumes:
      - ./frontend:/var/www/app
      - /var/www/app/node_modules  #ignore node_modules dir when copy
    ports:
      - "5173:5173"
    networks:
     - laravelnetwork
  nginx:
   image: nginx:alpine
   container_name: nginx_laravel
   restart: unless-stopped
   ports:
     - 80:80
   volumes:
     - ./backend:/var/www/html/
     - ./frontend/dist:/usr/share/nginx/html
     - ./nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf
   depends_on:
      - php_laravel
      - npm
   networks:
     - laravelnetwork

volumes:
  mysql-logs:
networks:
 laravelnetwork:
   driver: bridge
